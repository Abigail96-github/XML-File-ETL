<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/18/2023 12:26:46 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ABIGAIL-LAPTOP-"
  DTS:CreatorName="ABIGAIL-LAPTOP-\Abigail Hlongwani"
  DTS:DTSID="{4F328400-868B-4B19-894C-8AF0AB1E2EF1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5270.0"
  DTS:LocaleID="7177"
  DTS:ObjectName="GloryPackage"
  DTS:PackageType="5"
  DTS:VersionBuild="14"
  DTS:VersionGUID="{17FB81B4-7D64-4199-9BBD-57091CBDE9E7}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Package Logs Connection Manager]"
      DTS:CreationName="FILE"
      DTS:DTSID="{9135F7DA-A2A3-4443-AC5E-6357E4A21EEE}"
      DTS:ObjectName="Package Logs Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::PackageLogs]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\sbv_fake_sftp\package logs\GloryPackage_20231213.log" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="Package Logs Connection Manager"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:DTSID="{8F12C17E-03F7-4AB7-9C78-326C006C4658}"
      DTS:ObjectName="SSIS log provider for Text files">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9C2F19BA-E6A3-431A-9F5A-6517D38E97B2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ActiveFilePath">
      <DTS:VariableValue
        DTS:DataType="8">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{641686EA-F7A7-4C42-AE7D-9A341BAF1D23}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::DestinationFolderPath] +&quot;\\Glory_File_&quot;+ (DT_STR,4,1252)DATEPART( &quot;yyyy&quot; , getdate() ) + RIGHT(&quot;0&quot; + (DT_STR,4,1252)DATEPART( &quot;mm&quot; , getdate() ), 2) + RIGHT(&quot;0&quot; + (DT_STR,4,1252)DATEPART( &quot;dd&quot; , getdate() ), 2)  + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DestinationFilePath">
      <DTS:VariableValue
        DTS:DataType="8">null\Glory_File_20231213.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8B88A016-822A-4480-B74F-5D0EE108577C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DestinationFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">null</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7CA61AC2-AFC2-4577-8521-39D29FBF1E32}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="envPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Accurate\bin_ssis\.env</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1C2DAF7F-802D-43B6-AEC5-4A65D59280B8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ErrorPath] +&quot;\\&quot;+&quot;glory_error_logs&quot;+&quot;_&quot; +(DT_STR,4,1252)DATEPART( &quot;yyyy&quot; , getdate() ) + RIGHT(&quot;0&quot; + (DT_STR,4,1252)DATEPART( &quot;mm&quot; , getdate() ), 2) + RIGHT(&quot;0&quot; + (DT_STR,4,1252)DATEPART( &quot;dd&quot; , getdate() ), 2)  + &quot;.log&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorFile">
      <DTS:VariableValue
        DTS:DataType="8">null\glory_error_logs_20231213.log</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AA53E983-15A1-43B2-9141-61A641BF850C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorPath">
      <DTS:VariableValue
        DTS:DataType="8">null</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6AEDA7C6-F8FE-41C0-9704-0CE3374B5D07}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileWeJustFind">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{56793A52-B7F9-4C4D-B232-A81236EB4F7E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;C:\\sbv_fake_sftp\\package logs\\&quot;   + @[System::PackageName] +&quot;_&quot; +(DT_STR,4,1252)DATEPART( &quot;yyyy&quot; , getdate() ) + RIGHT(&quot;0&quot; + (DT_STR,4,1252)DATEPART( &quot;mm&quot; , getdate() ), 2) + RIGHT(&quot;0&quot; + (DT_STR,4,1252)DATEPART( &quot;dd&quot; , getdate() ), 2)  + &quot;.log&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageLogs">
      <DTS:VariableValue
        DTS:DataType="8">C:\sbv_fake_sftp\package logs\GloryPackage_20231213.log</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60C1B1D1-8C20-4E37-8FC4-54EB5A39F813}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessedFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">null</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{78382FAD-1748-40E3-AEEF-D86C5CE6BC61}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessThisFile">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{12353C30-F81D-4646-820B-B7BCC46F9428}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">null</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">4,7,OnError,19,OnExecStatusChanged,12,OnTaskFailed,22,OnVariableValueChanged</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnExecStatusChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{8F12C17E-03F7-4AB7-9C78-326C006C4658}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{F52268DD-2C12-4F10-8307-E16DDC11700E}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{C30D483C-A4C3-465C-B171-CF23CCFB7942}"
        DTS:ObjectName="{C30D483C-A4C3-465C-B171-CF23CCFB7942}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::SourceFolderPath]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="null" />
            <FEFEProperty
              FileSpec="*.*" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">3,7,OnError,19,OnExecStatusChanged,12,OnTaskFailed</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnExecStatusChanged"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnTaskFailed"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{8F12C17E-03F7-4AB7-9C78-326C006C4658}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{934A2E6A-E094-4399-B07E-0D53B6CB08AF}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Glory Data Transform Script"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_405a53dba6ef4952a2bbe09c72e7b086")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_405a53dba6ef4952a2bbe09c72e7b086")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.IO;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion
    DateTime dt = DateTime.Now;
    string account_number = "JHB_Cash_Centre";
    string is_statement = "Y";
    string tx_type = "I";
    string int_ref = "Glory";
    string errorpath;
    string user_date_b;
    string trans_date;
    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        // Lock the variable for write
        VariableDispenser variableDispenser = (VariableDispenser)this.VariableDispenser;
        variableDispenser.LockForRead("User::ErrorFile");

        IDTSVariables100 vars;
        variableDispenser.GetVariables(out vars);

        errorpath = vars["User::ErrorFile"].Value.ToString();
        // Unlock the variable
        vars.Unlock();
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from SourceInput.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void SourceInput_ProcessInputRow(SourceInputBuffer Row)
    {
        /*
         * Add your code here
         */
        try
        {
            user_date_b = dt.ToString("dd/MM/yyyy");
            var parsedDate = DateTime.Parse(Row.xmltransdate);
            trans_date = parsedDate.ToString("dd/MM/yyyy");

            Row.t = tx_type;
            Row.accountnum = account_number;
            Row.isstatement = is_statement;
            Row.intref = int_ref;
            Row.userdateb = user_date_b;
            Row.transdate = trans_date;
            Row.user7 = Row.xmluser7;
            Row.user12 = Row.xmluser12;
            Row.str002 = Row.xmlstr002;
            Row.str003 = Row.xmlstr003;
            Row.wfref = Row.xmlwfref;

            float ten_denom_total = 0;
            float twenty_denom_total = 0;
            float fifty_denom_total = 0;
            float hundred_denom_total = 0;
            float two_hundred_denom_total = 0;
            //MessageBox.Show(Row.xmldenomtwenty);
            if (!String.IsNullOrEmpty(Row.xmldenomten))
            {
                ten_denom_total = float.Parse(Row.xmldenomten) * 10;
            }

            if (!String.IsNullOrEmpty(Row.xmldenomtwenty))
            {
                twenty_denom_total = float.Parse(Row.xmldenomtwenty) * 20;
            }

            if (!String.IsNullOrEmpty(Row.xmldenomfifty))
            {
                fifty_denom_total = float.Parse(Row.xmldenomfifty) * 50;
            }

            if (!String.IsNullOrEmpty(Row.xmldenomhundred))
            {
                hundred_denom_total = float.Parse(Row.xmldenomhundred) * 100;
            }

            if (!String.IsNullOrEmpty(Row.xmldenomtwohundred))
            {
                two_hundred_denom_total = float.Parse(Row.xmldenomtwohundred) * 200;
            }

            float receipt_total_float = ten_denom_total + twenty_denom_total + fifty_denom_total + hundred_denom_total + two_hundred_denom_total;
            Row.receipt = receipt_total_float.ToString();

        }
        catch (Exception ex)
        {
            string appendText = DateTime.Now.ToString().Replace(":", "") + "::" + ex.Message + "Glory Data Transform Script" + Environment.NewLine;
            File.AppendAllText(errorpath, appendText);
            throw;
            //MessageBox.Show((ex.Message));
        }

    }
}]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class SourceInputBuffer: ScriptBuffer

{
    public SourceInputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String xmltransdate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool xmltransdate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String xmluser7
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool xmluser7_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String xmluser12
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool xmluser12_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String xmlstr002
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool xmlstr002_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String xmlstr003
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool xmlstr003_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String xmldenomten
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool xmldenomten_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String xmldenomfifty
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool xmldenomfifty_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String xmldenomtwenty
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool xmldenomtwenty_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String xmldenomhundred
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool xmldenomhundred_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String xmldenomtwohundred
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool xmldenomtwohundred_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String xmlwfref
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool xmlwfref_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String t
    {
        set
        {
            this[11] = value;
        }
    }
    public bool t_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String accountnum
    {
        set
        {
            this[12] = value;
        }
    }
    public bool accountnum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String isstatement
    {
        set
        {
            this[13] = value;
        }
    }
    public bool isstatement_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String intref
    {
        set
        {
            this[14] = value;
        }
    }
    public bool intref_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String userdateb
    {
        set
        {
            this[15] = value;
        }
    }
    public bool userdateb_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String transdate
    {
        set
        {
            this[16] = value;
        }
    }
    public bool transdate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String user7
    {
        set
        {
            this[17] = value;
        }
    }
    public bool user7_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String user12
    {
        set
        {
            this[18] = value;
        }
    }
    public bool user12_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String str002
    {
        set
        {
            this[19] = value;
        }
    }
    public bool str002_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String str003
    {
        set
        {
            this[20] = value;
        }
    }
    public bool str003_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String receipt
    {
        set
        {
            this[21] = value;
        }
    }
    public bool receipt_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String wfref
    {
        set
        {
            this[22] = value;
        }
    }
    public bool wfref_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"SourceInput", StringComparison.Ordinal))
        {
            SourceInput_ProcessInput(new SourceInputBuffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void SourceInput_ProcessInput(SourceInputBuffer Buffer)
    {
        while (Buffer.NextRow())
        {
            SourceInput_ProcessInputRow(Buffer);
        }
    }

    public virtual void SourceInput_ProcessInputRow(SourceInputBuffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ErrorFile
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["ErrorFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["ErrorFile"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_405a53dba6ef4952a2bbe09c72e7b086.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1F2F2276-D6C0-4599-B61E-7EC9B3082B15}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_405a53dba6ef4952a2bbe09c72e7b086</RootNamespace>
    <AssemblyName>SC_405a53dba6ef4952a2bbe09c72e7b086</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_405a53dba6ef4952a2bbe09c72e7b086</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_405a53dba6ef4952a2bbe09c72e7b086</msb:DisplayName>
    <msb:ProjectId>{8C5341C2-4C75-45F8-BA22-495C55DE359B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_405a53dba6ef4952a2bbe09c72e7b086.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_405a53dba6ef4952a2bbe09c72e7b086.Properties.Settings.get_Default():SC_405a53dba6ef4952a2bbe09c72e7b086.Properties.Sett" +
    "ings")]

namespace SC_405a53dba6ef4952a2bbe09c72e7b086.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_405a53dba6ef4952a2bbe09c72e7b086.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_405a53dba6ef4952a2bbe09c72e7b086.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_405a53dba6ef4952a2bbe09c72e7b086.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_405a53dba6ef4952a2bbe09c72e7b086.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_405a53dba6ef4952a2bbe09c72e7b086.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_405a53dba6ef4952a2bbe09c72e7b086.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALJ0eWUAAAAAAAAAAOAAIiALATAAACQAAAAIAAAAAAAAlkMA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAERDAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAnCMAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB4
QwAAAAAAAEgAAAACAAUAMCcAAFwbAAABAAAAAAAAAIxCAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwBFAAAAAQAAEQIoEAAACgIoEQAACnQeAAABJXIBAABw
bxIAAAoSAG8TAAAKAgZyAQAAcG8UAAAKbxUAAApvFgAACn0GAAAEBm8XAAAKKh4CKBgAAAoqAAAA
GzAGAPIBAAACAAARAgJ8AQAABHIhAABwKBkAAAp9BwAABANvBgAABigaAAAKCgISAHIhAABwKBkA
AAp9CAAABAMCewQAAARvHAAABgMCewIAAARvHgAABgMCewMAAARvIAAABgMCewUAAARvIgAABgMC
ewcAAARvJAAABgMCewgAAARvJgAABgMDbwgAAAZvKAAABgMDbwoAAAZvKgAABgMDbwwAAAZvLAAA
BgMDbw4AAAZvLgAABgMDbxoAAAZvMgAABiIAAAAACyIAAAAADCIAAAAADSIAAAAAEwQiAAAAABMF
A28QAAAGKBsAAAotEgNvEAAABigcAAAKIgAAIEFaCwNvFAAABigbAAAKLRIDbxQAAAYoHAAACiIA
AKBBWgwDbxIAAAYoGwAACi0SA28SAAAGKBwAAAoiAABIQloNA28WAAAGKBsAAAotEwNvFgAABigc
AAAKIgAAyEJaEwQDbxgAAAYoGwAACi0TA28YAAAGKBwAAAoiAABIQ1oTBQcIWAlYEQRYEQVYEwYD
EgYoHQAACm8wAAAG3mATBxuNIAAAASUWKB4AAAoTCRIJKB8AAApyNwAAcHI7AABwbyAAAAqiJRdy
PQAAcKIlGBEHbyEAAAqiJRlyQwAAcKIlGigiAAAKoigjAAAKEwgCewYAAAQRCCgkAAAK/hoqAABB
HAAAAAAAAAAAAACRAQAAkQEAAGAAAAAQAAAB+gIoHgAACn0BAAAEAnJ7AABwfQIAAAQCcpsAAHB9
AwAABAJynwAAcH0EAAAEAnKjAABwfQUAAAQCKDYAAAYqKgIDBAUoJQAACipSAnsmAAAKAnsnAAAK
FpRvKAAACioiAhYoKQAACipSAnsmAAAKAnsnAAAKF5RvKAAACioiAhcoKQAACipSAnsmAAAKAnsn
AAAKGJRvKAAACioiAhgoKQAACipSAnsmAAAKAnsnAAAKGZRvKAAACioiAhkoKQAACipSAnsmAAAK
AnsnAAAKGpRvKAAACioiAhooKQAACipSAnsmAAAKAnsnAAAKG5RvKAAACioiAhsoKQAACipSAnsm
AAAKAnsnAAAKHJRvKAAACioiAhwoKQAACipSAnsmAAAKAnsnAAAKHZRvKAAACioiAh0oKQAACipS
AnsmAAAKAnsnAAAKHpRvKAAACioiAh4oKQAACipWAnsmAAAKAnsnAAAKHwmUbygAAAoqJgIfCSgp
AAAKKlYCeyYAAAoCeycAAAofCpRvKAAACiomAh8KKCkAAAoqKgIfCwMoKgAACipeAywJAh8LKCsA
AAoqcq8AAHBzLAAACnoqAh8MAygqAAAKKl4DLAkCHwwoKwAACipyrwAAcHMsAAAKeioCHw0DKCoA
AAoqXgMsCQIfDSgrAAAKKnKvAABwcywAAAp6KgIfDgMoKgAACipeAywJAh8OKCsAAAoqcq8AAHBz
LAAACnoqAh8PAygqAAAKKl4DLAkCHw8oKwAACipyrwAAcHMsAAAKeioCHxADKCoAAAoqXgMsCQIf
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
EAAXAKYlAAAAAIYITgUTARgAviUAAAAAhgg0ChAAGQDJJQAAAACGCJ0GEwEaAOElAAAAAIYIYgQQ
ABsA7CUAAAAAhggVBhMBHAAEJgAAAACGAA0LnAAdAAwmAAAAAIYAxQmcAB0AFCYAAAAAhhh3CAYA
HQA0JgAAAADGAIoKGAEdAFkmAAAAAMYBfgoNASEAbCYAAAAAxgHxCg0BIgBuJgAAAACGGHcIIgEj
AH0mAAAAAIYYdwgiASQAjCYAAAAAhgidATYAJQCyJgAAAACGCKsBEAAlAM8mAAAAAIMYdwgGACYA
1yYAAAAAkwglCCgBJgADJwAAAACTCAYCLQEmAAonAAAAAJMIEgIyASYAEicAAAAAlgjRCTgBJwAZ
JwAAAACGGHcIBgAnACEnAAAAAJEYfQg9AScAAAABABELAAABAB4IAAACAG0JAAADALsHAAABAFQE
AAABAFQEAAABAFQEAAABAFQEAAABAFQEAAABAFQEAAABAFQEAAABAFQEAAABAFQEAAABAFQEAAAB
AFQEAAABAFQEAAABAFQEAAABAFQEAAABAFQEAAABAFQEAAABAFQEAAABAFQEAAABAFQEAAABAFQE
AAABAFQEAAABAFQEAAABAFQEAAABAFQEAAABAOIAAAACALkBAAADAB4IAAAEALsHAAABAB4IAAAB
ABELAAABACoKAAABACoKAAABAFQEAAABAFQECQB3CAEAEQB3CAYAGQB3CAoAKQB3CBAAMQB3CBAA
OQB3CBAAQQB3CBAASQB3CBAAUQB3CBAAWQB3CBAAYQB3CBAAaQB3CAYAsQB3CAYA0QB3CBUA4QB3
CAYAoQApBAYAoQBhCCAA6QAXARAA6QBgCSUAeQDrBiwA+QBABDIAqQCeBDYAeQC7BAYAoQA0BAYA
cQCeBEoAcQBGAk8AAQFHC1UACQFGAloACQGeBDYAcQDpCl8AcQCeBDYAAQFOAWQAgQBmATYAEQHM
AWoAAQG0CW4AGQGXCnQAiQB3CHoAiQAeCIQAiQBtCYgAkQCnBIwAiQDcBpEAiQD0BpYAiQDjBgEA
IQF3CBAAiQANC5wAiQDFCZwAoQB3CAYAAQGbCaAAoQCBCagAqQB3CAYAoQBJCa4AoQDUCrMA+QCl
CrkA+QBKBMAAQQGEAcUAQQEVC84AuQB3CNQA2QB3CAYALgALAFgBLgATAGEBLgAbAIABLgAjAIkB
LgArALIBLgAzALIBLgA7ALIBLgBDAIkBLgBLALgBLgBTALIBLgBbAM8BQwBjABkC4wBrABkC4QF7
ABkCCQZzAIABKQZzAIABGwA6AAMAAQAGAC8ABwAwAAgAMgAAAGkCQQEAAAEGRQEAANAAQQEAAIoF
RQEAAHsAQQEAAD0FRQEAAGIAQQEAABYFRQEAAJQAQQEAAGQFRQEAACMHQQEAAGYGRQEAACYLQQEA
ALQGRQEAADgLQQEAAM0GRQEAACcBQQEAALMFRQEAADsBQQEAAM4FRQEAAHAEQQEAACoGRQEAAOcK
QQEAAKcGRQEAAAgHQQEAAFAGRQEAAO4JQQEAAIoGRQEAAH0EQQEAAD4GRQEAAAQBQQEAAJ4FRQEA
AGwCQQEAAAQGRQEAANMAQQEAAI0FRQEAAH4AQQEAAEAFRQEAAGUAQQEAABkFRQEAAJcAQQEAAGcF
RQEAADgKQQEAAKEGRQEAAHMEQQEAAC0GRQEAAK8BQQEAACkISQEAACYCTgEAANUJUwECAAYAAwAC
AAcABQACAAgABwACAAkACQACAAoACwACAAsADQACAAwADwACAA0AEQACAA4AEwACAA8AFQACABAA
FwACABEAGQACABIAGwACABMAHQACABQAHwACABUAIQACABYAIwACABcAJQACABgAJwACABkAKQAC
ABoAKwACABsALQABABwALwABAB0AMQABAB4AMwABAB8ANQABACAANwABACEAOQABACIAOwABACMA
PQABACQAPwABACUAQQABACYAQwABACcARQABACgARwABACkASQABACoASwABACsATQABACwATwAB
AC0AUQABAC4AUwABAC8AVQABADAAVwABADEAWQABADIAWwABADMAXQACADwAXwABAD0AXwACAD8A
YQACAEAAYwABAEEAYwACAEIAZQAEgAAAAQAAAAAAAAAAAAAAAACeAAAABAAAAAAAAAAAAAAA3AAO
AQAAAAAPAAAAAAAAAAAAAADlAEAKAAAAAA8AAAAAAAAAAAAAAOUAxQcAAAAADwAAAAAAAAAAAAAA
5QBdCgAAAAAEAAAAAAAAAAAAAADcAP0GAAAAAAAAAAABAAAAyAgAAAAAAElEVFNWYXJpYWJsZTEw
MABJRFRTVmFyaWFibGVEaXNwZW5zZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9y
Q29udGV4dDEwMABzZXRfc3RyMDAyAGdldF94bWxzdHIwMDIAc2V0X3VzZXIxMgBnZXRfeG1sdXNl
cjEyAHNldF9zdHIwMDMAZ2V0X3htbHN0cjAwMwBTQ180MDVhNTNkYmE2ZWY0OTUyYTJiYmUwOWM3
MmU3YjA4NgBzZXRfdXNlcjcAZ2V0X3htbHVzZXI3ADxNb2R1bGU+AElucHV0SUQAU3lzdGVtLklP
AHVzZXJfZGF0ZV9iAHNldF91c2VyZGF0ZWIAbXNjb3JsaWIATG9ja0ZvclJlYWQAZ2V0X3htbGRl
bm9taHVuZHJlZABnZXRfeG1sZGVub210d29odW5kcmVkAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNl
AGdldF9NZXNzYWdlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFNpbmdsZQBn
ZXRfRXJyb3JGaWxlAHNldF9FcnJvckZpbGUASW5wdXROYW1lAERhdGVUaW1lAGdldF9OZXdMaW5l
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAdHhfdHlwZQBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUGFy
c2UAdHJhbnNfZGF0ZQBzZXRfdHJhbnNkYXRlAGdldF94bWx0cmFuc2RhdGUARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29t
cG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBnZXRfVmFsdWUA
c2V0X1ZhbHVlAHZhbHVlAGludF9yZWYAc2V0X3dmcmVmAGdldF94bWx3ZnJlZgBzZXRfaW50cmVm
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAR2V0U3RyaW5nAGVycm9ycGF0aABV
bmxvY2sAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzQwNWE1M2RiYTZlZjQ5NTJhMmJiZTA5Yzcy
ZTdiMDg2LmRsbABzZXRfc3RyMDAyX0lzTnVsbABnZXRfeG1sc3RyMDAyX0lzTnVsbABzZXRfdXNl
cjEyX0lzTnVsbABnZXRfeG1sdXNlcjEyX0lzTnVsbABzZXRfc3RyMDAzX0lzTnVsbABnZXRfeG1s
c3RyMDAzX0lzTnVsbABzZXRfdXNlcjdfSXNOdWxsAGdldF94bWx1c2VyN19Jc051bGwAc2V0X3Vz
ZXJkYXRlYl9Jc051bGwAZ2V0X3htbGRlbm9taHVuZHJlZF9Jc051bGwAZ2V0X3htbGRlbm9tdHdv
aHVuZHJlZF9Jc051bGwAc2V0X3RyYW5zZGF0ZV9Jc051bGwAZ2V0X3htbHRyYW5zZGF0ZV9Jc051
bGwAc2V0X3dmcmVmX0lzTnVsbABnZXRfeG1sd2ZyZWZfSXNOdWxsAHNldF9pbnRyZWZfSXNOdWxs
AHNldF9hY2NvdW50bnVtX0lzTnVsbABnZXRfeG1sZGVub210ZW5fSXNOdWxsAHNldF90X0lzTnVs
bABzZXRfaXNzdGF0ZW1lbnRfSXNOdWxsAHNldF9yZWNlaXB0X0lzTnVsbABnZXRfeG1sZGVub21m
aWZ0eV9Jc051bGwAZ2V0X3htbGRlbm9tdHdlbnR5X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNl
dF9JdGVtAFN5c3RlbQBzZXRfYWNjb3VudG51bQByZXNvdXJjZU1hbgBnZXRfeG1sZGVub210ZW4A
U2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24A
Q3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5E
VFNSdW50aW1lV3JhcABhY2NvdW50X251bWJlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIA
U291cmNlSW5wdXRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lLldyYXBwZXIAZ2V0X1ZhcmlhYmxlRGlzcGVuc2VyAC5jdG9yAC5jY3RvcgBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNDXzQwNWE1M2RiYTZlZjQ5NTJhMmJiZTA5YzcyZTdiMDg2LlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ180MDVhNTNkYmE2ZWY0OTUyYTJi
YmUwOWM3MmU3YjA4Ni5Qcm9wZXJ0aWVzAGdldF9SZWFkV3JpdGVWYXJpYWJsZXMAR2V0VmFyaWFi
bGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMA
Q29ubmVjdGlvbnMAc2V0X3QAQ29uY2F0AE9iamVjdABkdABFbmRPZlJvd3NldABnZXRfRGVmYXVs
dABpc19zdGF0ZW1lbnQAc2V0X2lzc3RhdGVtZW50AEVudmlyb25tZW50AFVzZXJDb21wb25lbnQA
UGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABzZXRfcmVjZWlwdABNaWNyb3NvZnQuU3Fs
U2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFNvdXJjZUlu
cHV0X1Byb2Nlc3NJbnB1dABBcHBlbmRBbGxUZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0
Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAZ2V0X05vdwBTb3VyY2VJ
bnB1dF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAZ2V0X3htbGRlbm9tZmlm
dHkAZ2V0X3htbGRlbm9tdHdlbnR5AElzTnVsbE9yRW1wdHkAAAAAAB9VAHMAZQByADoAOgBFAHIA
cgBvAHIARgBpAGwAZQAAFWQAZAAvAE0ATQAvAHkAeQB5AHkAAAM6AAABAAU6ADoAADdHAGwAbwBy
AHkAIABEAGEAdABhACAAVAByAGEAbgBzAGYAbwByAG0AIABTAGMAcgBpAHAAdAAAH0oASABCAF8A
QwBhAHMAaABfAEMAZQBuAHQAcgBlAAADWQAAA0kAAAtHAGwAbwByAHkAAICbSQBzAE4AdQBsAGwA
IABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBh
AGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMA
bwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAXUwBvAHUAcgBjAGUASQBuAHAAdQB0AAATRQBy
AHIAbwByAEYAaQBsAGUAAHFTAEMAXwA0ADAANQBhADUAMwBkAGIAYQA2AGUAZgA0ADkANQAyAGEA
MgBiAGIAZQAwADkAYwA3ADIAZQA3AGIAMAA4ADYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAAAAAohN1OOyFSECpaKW5JR9SMwAEIAEBCAMgAAEFIAEBEREEIAEBDgUg
AQERZQQHARI9BCAAEnUGIAEBEBI9BSABEn0cAyAAHAMgAA4PBwoROQwMDAwMDBJBDhE5BCABDg4F
AAEROQ4EAAECDgQAAQwOBAAAETkFIAIODg4DAAAOBQABDh0OBQACAQ4OCSADARJJHQgSTQMGEkkD
Bh0IBCABDggEIAECCAUgAgEIHAMgAAIHIAICDhGAlQUgAR0ICAQgABI9BQAAEoCZBiABHBKAnQQg
AQEcCAABEoChEYClBSAAEoCpByACAQ4SgKkIt3pcVhk04IkIiYRdzYCAzJEDBhE5AgYOAwYSFAMG
EhgDBhJRAwYSXQMGEmEDBhIgBSABARIMBCABAQIJIAQBCA4SSRJNBSABARJRBAAAEl0EAAASYQUA
AQESYQQAABIgAwAAAQMoAA4DKAACBAgAEl0ECAASYQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ180MDVhNTNkYmE2ZWY0OTUyYTJiYmUw
OWM3MmU3YjA4NgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIzAABJAQAaLk5FVEZyYW1ld29y
ayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQu
NwQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAAbEMAAAAAAAAAAAAAhkMAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAHhDAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
NAAwADUAYQA1ADMAZABiAGEANgBlAGYANAA5ADUAMgBhADIAYgBiAGUAMAA5AGMANwAyAGUANwBi
ADAAOAA2AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA0ADAANQBhADUAMwBkAGIAYQA2
AGUAZgA0ADkANQAyAGEAMgBiAGIAZQAwADkAYwA3ADIAZQA3AGIAMAA4ADYALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADQAMAA1AGEANQAz
AGQAYgBhADYAZQBmADQAOQA1ADIAYQAyAGIAYgBlADAAOQBjADcAMgBlADcAYgAwADgANgAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA0ADAANQBhADUAMwBk
AGIAYQA2AGUAZgA0ADkANQAyAGEAMgBiAGIAZQAwADkAYwA3ADIAZQA3AGIAMAA4ADYAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAJgzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_405a53dba6ef4952a2bbe09c72e7b086</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::ErrorFile</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">9E</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput]"
                      hasSideEffects="true"
                      name="SourceInput">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput].Columns[xml_trans_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="xml_trans_date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_trans_date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput].Columns[xml_user7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="xml_user7"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_user7]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput].Columns[xml_user12]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="xml_user12"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_user12]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput].Columns[xml_str002]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="xml_str002"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_str002]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput].Columns[xml_str003]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="xml_str003"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_str003]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput].Columns[xml_denom_ten]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="xml_denom_ten"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_ten]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput].Columns[xml_denom_fifty]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="xml_denom_fifty"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_fifty]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput].Columns[xml_denom_twenty]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="xml_denom_twenty"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_twenty]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput].Columns[xml_denom_hundred]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="xml_denom_hundred"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_hundred]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput].Columns[xml_denom_two_hundred]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="xml_denom_two_hundred"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_two_hundred]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput].Columns[xml_wf_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="xml_wf_ref"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_wf_ref]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput]"
                      name="SourceOutput"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[t]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[t]"
                          name="t" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[account_num]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[account_num]"
                          name="account_num" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[is_statement]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[is_statement]"
                          name="is_statement" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[int_ref]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[int_ref]"
                          name="int_ref" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[user_date_b]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[user_date_b]"
                          name="user_date_b" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[trans_date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[trans_date]"
                          name="trans_date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[user7]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[user7]"
                          name="user7" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[user12]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[user12]"
                          name="user12" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[str002]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[str002]"
                          name="str002" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[str003]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[str003]"
                          name="str003" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[receipt]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[receipt]"
                          name="receipt" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[wf_ref]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[wf_ref]"
                          name="wf_ref" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Glory Output Destination"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ActiveFilePath
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ActiveFilePath"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ErrorFile
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["ErrorFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["ErrorFile"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion
#region Namespaces
using System;
using System.Data;
using System.IO;
using System.Linq;
using System.Text.RegularExpressions;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion


/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion
    String destinationFile;
    private string pattern;
    string errorpath;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        // Lock the variable for write
        VariableDispenser variableDispenser = (VariableDispenser)this.VariableDispenser;
        variableDispenser.LockForRead("User::DestinationFilePath");
        variableDispenser.LockForRead("User::ErrorFile");
        /* variableDispenser.LockForRead("User::ProcessedFolderPath");
         variableDispenser.LockForRead("User::SourceFolderPath");*/

        IDTSVariables100 vars;
        variableDispenser.GetVariables(out vars);

        destinationFile = vars["User::DestinationFilePath"].Value.ToString();
        errorpath = vars["User::ErrorFile"].Value.ToString();
        /*  sourcefilepath = vars["User::SourceFolderPath"].Value.ToString();
          processedfilepath = vars["User::ProcessedFolderPath"].Value.ToString();*/
        // Unlock the variable
        vars.Unlock();
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        try
        {
            string row_data = Row.t + "," + Row.accountnum + "," + Row.isstatement + "," + Row.intref + "," + Row.userdateb + "," + Row.transdate + "," + Row.user7 + "," + Row.user12 + "," + Row.str002 + "," + Row.str003 + "," + Row.receipt + "," + Row.wfref + Environment.NewLine;
            //"," +

            if (!File.Exists(destinationFile))
            {
                string rowHeader = "t,account_num,is_statement,int_ref,user_date_b,trans_date,user7,user12,str002,str003,receipt,wf_ref" + Environment.NewLine;
                File.WriteAllText(destinationFile, rowHeader);
            }

            File.AppendAllText(destinationFile, row_data);
        }
        catch (Exception ex)
        {
            string appendText = DateTime.Now.ToString().Replace(":", "") + "::" + ex.Message + "Glory Output Destination" + Environment.NewLine;
            File.AppendAllText(errorpath, appendText);
            throw;
            //MessageBox.Show((ex.Message));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String t
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool t_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String accountnum
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool accountnum_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String isstatement
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool isstatement_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String intref
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool intref_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String userdateb
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool userdateb_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String transdate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool transdate_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String user7
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool user7_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String user12
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool user12_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String str002
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool str002_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String str003
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool str003_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String receipt
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool receipt_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String wfref
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool wfref_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_aa1ac81ac1a344a4b84d19647f3f11f4.Properties.Settings.get_Default():SC_aa1ac81ac1a344a4b84d19647f3f11f4.Properties.Sett" +
    "ings")]

namespace SC_aa1ac81ac1a344a4b84d19647f3f11f4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_aa1ac81ac1a344a4b84d19647f3f11f4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_aa1ac81ac1a344a4b84d19647f3f11f4")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_aa1ac81ac1a344a4b84d19647f3f11f4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_aa1ac81ac1a344a4b84d19647f3f11f4</msb:DisplayName>
    <msb:ProjectId>{33B494CC-7774-49B6-AA9E-676366ABAA9D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_aa1ac81ac1a344a4b84d19647f3f11f4.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_aa1ac81ac1a344a4b84d19647f3f11f4.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{23721915-4BEB-46C8-AD10-49D86369F921}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_aa1ac81ac1a344a4b84d19647f3f11f4</RootNamespace>
    <AssemblyName>SC_aa1ac81ac1a344a4b84d19647f3f11f4</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_aa1ac81ac1a344a4b84d19647f3f11f4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_aa1ac81ac1a344a4b84d19647f3f11f4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_aa1ac81ac1a344a4b84d19647f3f11f4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_aa1ac81ac1a344a4b84d19647f3f11f4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_aa1ac81ac1a344a4b84d19647f3f11f4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_aa1ac81ac1a344a4b84d19647f3f11f4.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
hgAFAFkjAAAAAIYIXgA2AAUAbiMAAAAAhgiBBIYABQB3IwAAAACGCFMANgAFAIwjAAAAAIYIbwSG
AAUAlSMAAAAAhghpADYABQCrIwAAAACGCJMEhgAFALUjAAAAAIYIcQg2AAUAyyMAAAAAhgg9BYYA
BQDVIwAAAACGCMsDNgAFAOsjAAAAAIYI4ASGAAUA9SMAAAAAhgBNCYYABQD9IwAAAACGAA8IhgAF
AAUkAAAAAIYYpwYGAAUAJSQAAAAAxgDCCPkABQBKJAAAAADGAbsI8wAJAF0kAAAAAMYBNgnzAAoA
XyQAAAAAhhinBgMBCwBuJAAAAACGGKcGAwEMAH0kAAAAAIYIDQQ2AA0AoyQAAAAAhgg4ATYADQDJ
JAAAAACGCEYBEAANAOYkAAAAAIMYpwYGAA4A7iQAAAAAkwhVBgkBDgAaJQAAAACTCJkBDgEOACEl
AAAAAJMIpQETAQ4AKSUAAAAAlggbCBkBDwAwJQAAAACGGKcGBgAPADglAAAAAJEYrQYeAQ8AAAAB
AFEJAAABAE4GAAACALMHAAADAP8FAAABAKsAAAACAFQBAAADAE4GAAAEAP8FAAABAE4GAAABAFEJ
AAABAGcIAAABAGcIAAABAMUDAAABAMUDCQCnBgEAEQCnBgYAGQCnBgoAKQCnBhAAMQCnBhAAOQCn
BhAAQQCnBhAASQCnBhAAUQCnBhAAWQCnBhAAYQCnBhAAaQCnBgYAsQCnBgYA0QCnBhUA4QCnBgYA
oQCaAwYAoQCRBiAA6QDUABAA6QCQByUAcQBQBSwA+QCxAzIAqQD6AzYAcQAqBAYAoQClAwYACQFn
AUQAAQEBCEgAEQH0B04AAQEBCFMAEQHdCFkAEQHPCFkAgQAuCV8AgQD6AzYAAQHgAGQAeQD4ADYA
iQCnBmoAiQBOBnQAiQCzB3gAkQADBHwAiQBJBYEAiQBNCYYAiQAPCIYAoQCnBgYAAQHhB4oAoQDH
B5IAqQCnBgYAoQCdB5gAoQAZCZ0A+QDqCKMAoQB5B5gA+QC7A6oAMQEWAa8AMQFVCbgAuQCnBr4A
2QCnBgYALgALADkBLgATAEIBLgAbAGEBLgAjAGoBLgArAJMBLgAzAJMBLgA7AJMBLgBDAGoBLgBL
AJkBLgBTAJMBLgBbALABQwBjAPoB4wBrAPoBQQF7APoBaQNzAGEBiQNzAGEBGwA6AAMAAQAGABkA
BwAbAAgAHQAAACwJIgEAAEcFJgEAAGQFIgEAAAcFJgEAACsIIgEAACoFJgEAANkDIgEAAPUEJgEA
AMEAIgEAALoEJgEAAN0BIgEAAM8EJgEAAJwAIgEAAKkEJgEAAGIAIgEAAIUEJgEAAFcAIgEAAHME
JgEAAG0AIgEAAJcEJgEAAHUIIgEAAEEFJgEAAM8DIgEAAOQEJgEAABEEIgEAAEoBIgEAAFkGKgEA
ALkBLwEAAB8INAECAAYAAwACAAcABQACAAgABwACAAkACQACAAoACwACAAsADQACAAwADwACAA0A
EQACAA4AEwACAA8AFQACABAAFwACABEAGQACABIAGwACABMAHQACABQAHwACABUAIQACABYAIwAC
ABcAJQACABgAJwACABkAKQACABoAKwACABsALQACABwALwACAB0AMQACACYAMwACACcANQABACgA
NQACACoANwACACsAOQABACwAOQACAC0AOwAEgAAAAQAAAAAAAAAAAAAAAAB0AAAABAAAAAAAAAAA
AAAAxgDLAAAAAAAPAAAAAAAAAAAAAADPAH0IAAAAAA8AAAAAAAAAAAAAAM8ACQYAAAAADwAAAAAA
AAAAAAAAzwCaCAAAAAAEAAAAAAAAAAAAAADGAFkFAAAAAAAAAAABAAAA+AYAAAAAAElEVFNWYXJp
YWJsZTEwMABJRFRTVmFyaWFibGVEaXNwZW5zZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZh
bHVhdG9yQ29udGV4dDEwMABnZXRfc3RyMDAyAGdldF91c2VyMTIAZ2V0X3N0cjAwMwBTQ19hYTFh
YzgxYWMxYTM0NGE0Yjg0ZDE5NjQ3ZjNmMTFmNABnZXRfdXNlcjcAPE1vZHVsZT4ASW5wdXRJRABT
eXN0ZW0uSU8AZ2V0X3VzZXJkYXRlYgBtc2NvcmxpYgBMb2NrRm9yUmVhZABSZXBsYWNlAGRlZmF1
bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBkZXN0aW5hdGlvbkZpbGUAZ2V0X0Vycm9yRmlsZQBzZXRfRXJyb3JGaWxlAElucHV0TmFtZQBE
YXRlVGltZQBnZXRfTmV3TGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBnZXRfdHJhbnNkYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBnZXRfd2Zy
ZWYAZ2V0X2ludHJlZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAEdldFN0cmlu
ZwBnZXRfQWN0aXZlRmlsZVBhdGgAZXJyb3JwYXRoAFVubG9jawBTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwAU0NfYWExYWM4MWFjMWEzNDRhNGI4NGQxOTY0N2YzZjExZjQuZGxsAGdldF9zdHIwMDJfSXNO
dWxsAGdldF91c2VyMTJfSXNOdWxsAGdldF9zdHIwMDNfSXNOdWxsAGdldF91c2VyN19Jc051bGwA
Z2V0X3VzZXJkYXRlYl9Jc051bGwAZ2V0X3RyYW5zZGF0ZV9Jc051bGwAZ2V0X3dmcmVmX0lzTnVs
bABnZXRfaW50cmVmX0lzTnVsbABnZXRfYWNjb3VudG51bV9Jc051bGwAZ2V0X3RfSXNOdWxsAGdl
dF9pc3N0YXRlbWVudF9Jc051bGwAZ2V0X3JlY2VpcHRfSXNOdWxsAGdldF9JdGVtAFN5c3RlbQBn
ZXRfYWNjb3VudG51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBTdHJpbmdD
b21wYXJpc29uAHBhdHRlcm4AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWlj
cm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZS5XcmFwcGVyAGdldF9WYXJpYWJsZURpc3BlbnNlcgAuY3RvcgAuY2N0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJl
c291cmNlcwBTQ19hYTFhYzgxYWMxYTM0NGE0Yjg0ZDE5NjQ3ZjNmMTFmNC5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfYWExYWM4MWFjMWEzNDRhNGI4NGQx
OTY0N2YzZjExZjQuUHJvcGVydGllcwBnZXRfUmVhZFdyaXRlVmFyaWFibGVzAEdldFZhcmlhYmxl
cwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRl
eGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBFeGlzdHMAZ2V0X3QAQ29uY2F0AE9iamVj
dABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABnZXRfaXNzdGF0ZW1lbnQARW52aXJvbm1lbnQAVXNl
ckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9yZWNlaXB0AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhv
c3QASW5wdXQwX1Byb2Nlc3NJbnB1dABBcHBlbmRBbGxUZXh0AFdyaXRlQWxsVGV4dABHZXRWYWx1
ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250
ZXh0AGdldF9Ob3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAA
AAAzVQBzAGUAcgA6ADoARABlAHMAdABpAG4AYQB0AGkAbwBuAEYAaQBsAGUAUABhAHQAaAAAH1UA
cwBlAHIAOgA6AEUAcgByAG8AcgBGAGkAbABlAAADLAAAgMd0ACwAYQBjAGMAbwB1AG4AdABfAG4A
dQBtACwAaQBzAF8AcwB0AGEAdABlAG0AZQBuAHQALABpAG4AdABfAHIAZQBmACwAdQBzAGUAcgBf
AGQAYQB0AGUAXwBiACwAdAByAGEAbgBzAF8AZABhAHQAZQAsAHUAcwBlAHIANwAsAHUAcwBlAHIA
MQAyACwAcwB0AHIAMAAwADIALABzAHQAcgAwADAAMwAsAHIAZQBjAGUAaQBwAHQALAB3AGYAXwBy
AGUAZgAAAzoAAAEABToAOgAAMUcAbABvAHIAeQAgAE8AdQB0AHAAdQB0ACAARABlAHMAdABpAG4A
YQB0AGkAbwBuAAAPSQBuAHAAdQB0ACAAMAAAHUEAYwB0AGkAdgBlAEYAaQBsAGUAUABhAHQAaAAA
E0UAcgByAG8AcgBGAGkAbABlAABxUwBDAF8AYQBhADEAYQBjADgAMQBhAGMAMQBhADMANAA0AGEA
NABiADgANABkADEAOQA2ADQANwBmADMAZgAxADEAZgA0AC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAABWRrBATtXXS6uu35gSlGy7AAQgAQEIAyAAAQUgAQEREQQgAQEO
BSABARFlBAcBEjkEIAASdQYgAQEQEjkFIAESfRwDIAAcAyAADgkHBQ4OEj0OEUEDAAAOBQABDh0O
BAABAg4FAAIODg4FAAIBDg4EAAARQQUgAg4ODgkgAwESSR0IEk0DBhJJAwYdCAQgAQ4IBCABAggD
IAACByACAg4RgI0FIAEdCAgEIAASOQUAABKAkQYgARwSgJUEIAEBHAgAARKAmRGAnQUgABKAoQcg
AgEOEoChCLd6XFYZNOCJCImEXc2AgMyRAgYOAwYSFAMGEhgDBhJRAwYSXQMGEmEDBhIgBSABARIM
CSAEAQgOEkkSTQUgAQESUQQAABJdBAAAEmEFAAEBEmEEAAASIAMAAAEDKAAOAygAAgQIABJdBAgA
EmEECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAo
AQAjU0NfYWExYWM4MWFjMWEzNDRhNGI4NGQxOTY0N2YzZjExZjQAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtE
aXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAoDwAAAAAAAAA
AAAAujwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKw8AAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AYQBhADEAYQBjADgAMQBhAGMAMQBhADMANAA0AGEANABiADgANABkADEAOQA2ADQANwBmADMA
ZgAxADEAZgA0AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBhAGEAMQBhAGMAOAAxAGEA
YwAxAGEAMwA0ADQAYQA0AGIAOAA0AGQAMQA5ADYANAA3AGYAMwBmADEAMQBmADQALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGEAYQAxAGEA
YwA4ADEAYQBjADEAYQAzADQANABhADQAYgA4ADQAZAAxADkANgA0ADcAZgAzAGYAMQAxAGYANAAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBhAGEAMQBhAGMA
OAAxAGEAYwAxAGEAMwA0ADQAYQA0AGIAOAA0AGQAMQA5ADYANAA3AGYAMwBmADEAMQBmADQAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAMw8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_aa1ac81ac1a344a4b84d19647f3f11f4</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ActiveFilePath</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::ErrorFile</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">7B</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0].Columns[t]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="t"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[t]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0].Columns[account_num]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="account_num"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[account_num]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0].Columns[is_statement]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="is_statement"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[is_statement]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0].Columns[int_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="int_ref"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[int_ref]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0].Columns[user_date_b]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="user_date_b"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[user_date_b]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0].Columns[trans_date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="trans_date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[trans_date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0].Columns[user7]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="user7"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[user7]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0].Columns[user12]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="user12"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[user12]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0].Columns[str002]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="str002"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[str002]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0].Columns[str003]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="str003"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[str003]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0].Columns[receipt]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="receipt"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[receipt]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0].Columns[wf_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="150"
                          cachedName="wf_ref"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput].Columns[wf_ref]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Glory Soap XML Loading Script"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_cbc8db93d4714053ad61d170c8d4131e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_cbc8db93d4714053ad61d170c8d4131e")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;
using System.Collections.Generic;
using System.Xml;
using System.Linq;
using System.Windows.Forms;
using System.Text;
using System.Threading.Tasks;
using System.Diagnostics;
using System.Xml.Linq;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    string dataSourceFile;
    string errorpath;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        base.PreExecute();
        /*
         * Add your code here
         */
        // Lock the variable for write
        VariableDispenser variableDispenser = (VariableDispenser)this.VariableDispenser;
        variableDispenser.LockForRead("User::ActiveFilePath");
        variableDispenser.LockForRead("User::ErrorFile");

        IDTSVariables100 vars;
        variableDispenser.GetVariables(out vars);

        dataSourceFile = vars["User::ActiveFilePath"].Value.ToString();
        errorpath = vars["User::ErrorFile"].Value.ToString();
        // Unlock the variable
        //MessageBox.Show(dataSourceFile);
        vars.Unlock();
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        try
        {
            XmlDocument _doc = new XmlDocument();
            _doc.Load(dataSourceFile);
            var nsmgr = new XmlNamespaceManager(_doc.NameTable);
            nsmgr.AddNamespace("soapenv", "http://schemas.xmlsoap.org/soap/envelope/");

            GloryDataBuffer.AddRow();
            XmlNodeList date_tag = _doc.GetElementsByTagName("Date");
            GloryDataBuffer.xmltransdate = date_tag[0].InnerText;
            XmlNodeList machinenum_tag = _doc.GetElementsByTagName("MachineNo");
            GloryDataBuffer.xmluser12 = machinenum_tag[0].InnerText;
            XmlNodeList transnum_tag = _doc.GetElementsByTagName("TransNum");
            GloryDataBuffer.xmluser7 = transnum_tag[0].InnerText;
            XmlNodeList serialnum_tag = _doc.GetElementsByTagName("SerialNo");
            GloryDataBuffer.xmlstr002 = serialnum_tag[0].InnerText;
            //MessageBox.Show(date_tag[0].InnerText);

            foreach (XmlNode node in _doc.SelectNodes("soapenv:Envelope/soapenv:Body/BcxEventNotice/GlyCashierEvent/eventCollectRemoved/Cash/Denomination", nsmgr))
            {
                if (node.Attributes["fv"].Value == "1000")
                {
                    GloryDataBuffer.xmldenomten = node.SelectSingleNode("Piece").InnerText;
                }
                if (node.Attributes["fv"].Value == "2000")
                {
                    GloryDataBuffer.xmldenomtwenty = node.SelectSingleNode("Piece").InnerText;
                }
                if (node.Attributes["fv"].Value == "5000")
                {
                    GloryDataBuffer.xmldenomfifty = node.SelectSingleNode("Piece").InnerText;
                }
                if (node.Attributes["fv"].Value == "10000")
                {
                    GloryDataBuffer.xmldenomhundred = node.SelectSingleNode("Piece").InnerText;
                }
                if (node.Attributes["fv"].Value == "20000")
                {
                    GloryDataBuffer.xmldenomtwohundred = node.SelectSingleNode("Piece").InnerText;
                }
            };
            XmlNodeList sstorename_tag = _doc.GetElementsByTagName("StoreName");
            GloryDataBuffer.xmlstr003 = sstorename_tag[0].InnerText;
            var filename = Path.GetFileName(dataSourceFile);
            GloryDataBuffer.xmlwfref = filename;

        }
        catch (Exception ex)
        {
            string appendText = DateTime.Now.ToString().Replace(":", "") + "::" + ex.Message + "At Glory Soap XML Loading Script" + Environment.NewLine;
            File.AppendAllText(errorpath, appendText);
            throw;
            //MessageBox.Show((ex.Message));
        }
    }

    static IEnumerable<XElement> StreamReader(string filename, string elementname)
    {
        //XElement contains the source collection which allows us to loop through the source using Linq
        using (XmlReader xr = XmlReader.Create(filename))
        {
            xr.MoveToContent();
            while (xr.Read())
            {
                while (xr.NodeType == XmlNodeType.Element && xr.Name == elementname)
                {
                    XElement node = (XElement)XElement.ReadFrom(xr);
                    yield return node;

                }
            }
            xr.Close();
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class GloryDataBuffer: ScriptBuffer

{
    public GloryDataBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String xmltransdate
    {
        set
        {
            this[0] = value;
        }
    }
    public bool xmltransdate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmluser7
    {
        set
        {
            this[1] = value;
        }
    }
    public bool xmluser7_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmluser12
    {
        set
        {
            this[2] = value;
        }
    }
    public bool xmluser12_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmlstr002
    {
        set
        {
            this[3] = value;
        }
    }
    public bool xmlstr002_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmlstr003
    {
        set
        {
            this[4] = value;
        }
    }
    public bool xmlstr003_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmldenomten
    {
        set
        {
            this[5] = value;
        }
    }
    public bool xmldenomten_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmldenomfifty
    {
        set
        {
            this[6] = value;
        }
    }
    public bool xmldenomfifty_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmldenomtwenty
    {
        set
        {
            this[7] = value;
        }
    }
    public bool xmldenomtwenty_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmldenomhundred
    {
        set
        {
            this[8] = value;
        }
    }
    public bool xmldenomhundred_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmldenomtwohundred
    {
        set
        {
            this[9] = value;
        }
    }
    public bool xmldenomtwohundred_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String xmlwfref
    {
        set
        {
            this[10] = value;
        }
    }
    public bool xmlwfref_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public GloryDataBuffer GloryDataBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != GloryDataBuffer)
        {
            GloryDataBuffer.SetEndOfRowset();
            GloryDataBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"GloryData"))
            {
                GloryDataBuffer = new GloryDataBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ActiveFilePath
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ActiveFilePath"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ErrorFile
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["ErrorFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["ErrorFile"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_cbc8db93d4714053ad61d170c8d4131e.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{77DBDBF1-90EA-4107-B172-8ADF44119D8E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_cbc8db93d4714053ad61d170c8d4131e</RootNamespace>
    <AssemblyName>SC_cbc8db93d4714053ad61d170c8d4131e</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_cbc8db93d4714053ad61d170c8d4131e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_cbc8db93d4714053ad61d170c8d4131e</msb:DisplayName>
    <msb:ProjectId>{B4EFE085-DAE5-4820-AFF9-D131D88FAB4D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_cbc8db93d4714053ad61d170c8d4131e.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cbc8db93d4714053ad61d170c8d4131e.Properties.Settings.get_Default():SC_cbc8db93d4714053ad61d170c8d4131e.Properties.Sett" +
    "ings")]

namespace SC_cbc8db93d4714053ad61d170c8d4131e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cbc8db93d4714053ad61d170c8d4131e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cbc8db93d4714053ad61d170c8d4131e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cbc8db93d4714053ad61d170c8d4131e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_cbc8db93d4714053ad61d170c8d4131e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_cbc8db93d4714053ad61d170c8d4131e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_cbc8db93d4714053ad61d170c8d4131e.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AQDGBQAAAQBeCwAAAgDfCQAAAwBQCwAABABkCAAAAQANDAAAAQANDAAAAQDGBQAAAQDGBQAAAQCv
AwkACgAJAHkACQAGAAkAUQAJAEkACQDSCQEAEQDSCQYAGQDSCQoAKQDSCRAAMQDSCRAAOQDSCRAA
QQDSCRAASQDSCRAAUQDSCRAAWQDSCRAAYQDSCRAAaQDSCQYAwQDSCRUA2QDSCQYAoQB6AwYAkQBw
DRsADADzDCYAkQCnCwYAkQDzDCsAFADECTYA8QDECT8AAQHSCQYAKQHSCQYASQHSCUQAIQGbBQYA
IQE0CVAAWQFDARAAWQHRClYAcQB+B10AaQGyBSsA4QD+BWQAcQAkBgYAIQGmBQYAeQDSCQYAeQBP
ARAAeQAHAoUAgQDSCYsAgQC/AZIAeQCeApgAiQDMBZ4AmQCHDWQAmQB/CqQAiQDECT8AmQD0CqwA
eQHMBbIAmQCyBWQAiQEHDrkAmQDiAb8AkQGSAsUAsQDZDcoAsQD+BWQAiQG3Ac8AqQD7AWQAmQHb
AtUAiQF6C9kAoQF5Dd8ACQHSCeUACQGHB/EACQFrBwEAqQHSCRAACQHhDQYACQGtCwYACQGwCxsA
IQHSCQYAIQHZAPsAIQEXCwMB4QDSCQYAIQHeCgkBIQHEDQ4BaQGVDRQBIQG6CgkBaQG8BRsBuQBM
AiABuQDoDSgBMQHSCS4BUQHSCQYAmQETATYB+QCTA0EB+QAMDUcB2QGXB00B+QAIA0cB+QCJAmQA
+QBKARsA+QBhAwYA4QHSCQYALgALAAoCLgATABMCLgAbADICLgAjADsCLgArAGQCLgAzAGQCLgA7
AGQCLgBDADsCLgBLAGoCLgBTAGQCLgBbAIECQwBjAO4CgABrAMsC4wC7AO4CIwFzAO4CQQFzAO4C
KQPDADICSQPDADICIAazAO4CQAazAO4CoAazAO4CwAazAO4C4AazAO4CAAezAO4CIAezAO4CSwBo
APcAOgFVAQMAAQAGABcABwAZAAgAGwAJABwAAACGA+gBAAD5BuwBAADHAOgBAACsBuwBAACPAOgB
AACCBuwBAACBAOgBAABtBuwBAACmAOgBAACXBuwBAACwB+gBAAAlB+wBAAD5DegBAAA8B+wBAAAX
DugBAABVB+wBAABsAegBAADABuwBAACAAegBAADbBuwBAADbBegBAAARB+wBAAALBugBAAB/AugB
AAD8CPABAABBA/YBAADAC/wBAAAXDAECAABgDAYCAQAHAAMAAQAIAAUAAQAJAAcAAQAKAAkAAQAL
AAsAAQAMAA0AAQANAA8AAQAOABEAAQAPABMAAQAQABUAAQARABcAAQASABkAAQATABsAAQAUAB0A
AQAVAB8AAQAWACEAAQAXACMAAQAYACUAAQAZACcAAQAaACkAAQAbACsAAQAcAC0AAgAnAC8AAgAo
ADEAAQApADEAAgArADMAAgAsADUAAQAtADUAAgAuADcAAgA1ADkAAgA3ADsACQBkAB8ACQBmACEA
CQBqACMACQBsACUACQBuACcACQBwACkACQByACsAHwAvAASAAAABAAAAAAAAAAAAAAAAAJMBAAAE
AAAAAAAAAAAAAABaAe8AAAAAAA8AAAAAAAAAAAAAAGMBGg0AAAAADwAAAAAAAAAAAAAAYwFuCAAA
AAAEAAAAAAAAAAAAAABaAXMHAAAAAAQAAAAAAAAAAAAAAFoBkQgAAAAADwAAAAAAAAAAAAAAYwFD
DQAAAAAEAAAAAAAAAAAAAABaAZAHAAAAAAAAAAABAAAALQoAAAkAAgAAAAAAAElEVFNWYXJpYWJs
ZTEwMABJRFRTVmFyaWFibGVEaXNwZW5zZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVh
dG9yQ29udGV4dDEwMABJRW51bWVyYWJsZWAxAElFbnVtZXJhdG9yYDEAPD5tX19GaW5hbGx5MQBz
ZXRfeG1sc3RyMDAyAHNldF94bWx1c2VyMTIAPHhyPjVfXzIAc2V0X3htbHN0cjAwMwA8U3RyZWFt
UmVhZGVyPmRfXzUAc2V0X3htbHVzZXI3ADxNb2R1bGU+AEdldE91dHB1dElEAFN5c3RlbS5JTwBt
c2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBnZXRfQ3VycmVudE1hbmFnZWRUaHJl
YWRJZAA8PmxfX2luaXRpYWxUaHJlYWRJZABMb2NrRm9yUmVhZABMb2FkAE1hcmtPdXRwdXRzRmlu
aXNoZWQAc2V0X3htbGRlbm9taHVuZHJlZABzZXRfeG1sZGVub210d29odW5kcmVkAFNDX2NiYzhk
YjkzZDQ3MTQwNTNhZDYxZDE3MGM4ZDQxMzFlAFJlcGxhY2UAQWRkTmFtZXNwYWNlAGRlZmF1bHRJ
bnN0YW5jZQBYTm9kZQBTZWxlY3RTaW5nbGVOb2RlAFhtbE5vZGUAZ2V0X01lc3NhZ2UAZ2V0X05h
bWVUYWJsZQBYbWxOYW1lVGFibGUASUVudW1lcmFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZGF0YVNvdXJjZUZpbGUAZ2V0X0Vycm9yRmlsZQBzZXRf
RXJyb3JGaWxlAGdldF9OYW1lAEdldEZpbGVOYW1lAEdldEVsZW1lbnRzQnlUYWdOYW1lADw+M19f
ZmlsZW5hbWUAPD4zX19lbGVtZW50bmFtZQBEYXRlVGltZQBnZXRfTmV3TGluZQBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5QaXBlbGluZQBnZXRfTm9kZVR5cGUAWG1sTm9kZVR5cGUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENs
b3NlAFN5c3RlbS5JRGlzcG9zYWJsZS5EaXNwb3NlAHNldF94bWx0cmFuc2RhdGUAQ3JlYXRlAEVk
aXRvckJyb3dzYWJsZVN0YXRlADw+MV9fc3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEl0ZXJhdG9yU3RhdGVNYWNo
aW5lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0
dHJpYnV0ZQBYbWxBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlDb25m
aWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlD
b3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFBy
ZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBnZXRfSXRlbU9m
AHNldF94bWx3ZnJlZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAGdldF9BY3Rp
dmVGaWxlUGF0aABlcnJvcnBhdGgAVW5sb2NrAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19jYmM4
ZGI5M2Q0NzE0MDUzYWQ2MWQxNzBjOGQ0MTMxZS5kbGwAc2V0X3htbHN0cjAwMl9Jc051bGwAc2V0
X3htbHVzZXIxMl9Jc051bGwAc2V0X3htbHN0cjAwM19Jc051bGwAc2V0X3htbHVzZXI3X0lzTnVs
bABzZXRfeG1sZGVub21odW5kcmVkX0lzTnVsbABzZXRfeG1sZGVub210d29odW5kcmVkX0lzTnVs
bABzZXRfeG1sdHJhbnNkYXRlX0lzTnVsbABzZXRfeG1sd2ZyZWZfSXNOdWxsAHNldF94bWxkZW5v
bXRlbl9Jc051bGwAc2V0X3htbGRlbm9tZmlmdHlfSXNOdWxsAHNldF94bWxkZW5vbXR3ZW50eV9J
c051bGwAU2V0TnVsbABTeXN0ZW0uWG1sAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBSZWFkRnJv
bQByZXNvdXJjZU1hbgBzZXRfeG1sZGVub210ZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBYbWxBdHRyaWJ1dGVD
b2xsZWN0aW9uAE5vdFN1cHBvcnRlZEV4Y2VwdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9u
AEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RFRTUnVudGltZVdyYXAAU3lzdGVtLlhtbC5MaW5xAFhtbFJlYWRlcgBTdHJlYW1SZWFkZXIAR2xv
cnlEYXRhQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBYbWxOYW1lc3BhY2VNYW5h
Z2VyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5X
cmFwcGVyAGdldF9WYXJpYWJsZURpc3BlbnNlcgBJRW51bWVyYXRvcgBTeXN0ZW0uQ29sbGVjdGlv
bnMuR2VuZXJpYy5JRW51bWVyYWJsZTxTeXN0ZW0uWG1sLkxpbnEuWEVsZW1lbnQ+LkdldEVudW1l
cmF0b3IAU3lzdGVtLkNvbGxlY3Rpb25zLklFbnVtZXJhYmxlLkdldEVudW1lcmF0b3IALmN0b3IA
LmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2NiYzhkYjkzZDQ3MTQwNTNhZDYxZDE3MGM4
ZDQxMzFlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTZWxl
Y3ROb2RlcwBTQ19jYmM4ZGI5M2Q0NzE0MDUzYWQ2MWQxNzBjOGQ0MTMxZS5Qcm9wZXJ0aWVzAGdl
dF9SZWFkV3JpdGVWYXJpYWJsZXMAR2V0VmFyaWFibGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBn
ZXRfQXR0cmlidXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGlu
Z3MAU3lzdGVtLkNvbGxlY3Rpb25zAENvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBD
cmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABPYmplY3QAU3lzdGVtLkNvbGxlY3Rpb25zLklFbnVt
ZXJhdG9yLlJlc2V0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFhFbGVtZW50AEVudmlyb25t
ZW50AFhtbERvY3VtZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBv
bmVudABTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5JRW51bWVyYXRvcjxTeXN0ZW0uWG1sLkxp
bnEuWEVsZW1lbnQ+LkN1cnJlbnQAU3lzdGVtLkNvbGxlY3Rpb25zLklFbnVtZXJhdG9yLkN1cnJl
bnQAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuSUVudW1lcmF0b3I8U3lzdGVtLlhtbC5MaW5x
LlhFbGVtZW50Pi5nZXRfQ3VycmVudABTeXN0ZW0uQ29sbGVjdGlvbnMuSUVudW1lcmF0b3IuZ2V0
X0N1cnJlbnQAPD4yX19jdXJyZW50AE1vdmVUb0NvbnRlbnQATWljcm9zb2Z0LlNxbFNlcnZlci5U
eFNjcmlwdABYbWxOb2RlTGlzdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQcmlt
ZU91dHB1dABNb3ZlTmV4dABBcHBlbmRBbGxUZXh0AGdldF9Jbm5lclRleHQAR2V0VmFsdWVXaXRo
Q29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABn
ZXRfTm93AEFkZFJvdwBnZXRfQXNzZW1ibHkAc2V0X3htbGRlbm9tZmlmdHkAb3BfRXF1YWxpdHkA
c2V0X3htbGRlbm9tdHdlbnR5AAAAAClVAHMAZQByADoAOgBBAGMAdABpAHYAZQBGAGkAbABlAFAA
YQB0AGgAAB9VAHMAZQByADoAOgBFAHIAcgBvAHIARgBpAGwAZQAAD3MAbwBhAHAAZQBuAHYAAFNo
AHQAdABwADoALwAvAHMAYwBoAGUAbQBhAHMALgB4AG0AbABzAG8AYQBwAC4AbwByAGcALwBzAG8A
YQBwAC8AZQBuAHYAZQBsAG8AcABlAC8AAAlEAGEAdABlAAATTQBhAGMAaABpAG4AZQBOAG8AABFU
AHIAYQBuAHMATgB1AG0AABFTAGUAcgBpAGEAbABOAG8AAIDFcwBvAGEAcABlAG4AdgA6AEUAbgB2
AGUAbABvAHAAZQAvAHMAbwBhAHAAZQBuAHYAOgBCAG8AZAB5AC8AQgBjAHgARQB2AGUAbgB0AE4A
bwB0AGkAYwBlAC8ARwBsAHkAQwBhAHMAaABpAGUAcgBFAHYAZQBuAHQALwBlAHYAZQBuAHQAQwBv
AGwAbABlAGMAdABSAGUAbQBvAHYAZQBkAC8AQwBhAHMAaAAvAEQAZQBuAG8AbQBpAG4AYQB0AGkA
bwBuAAAFZgB2AAAJMQAwADAAMAAAC1AAaQBlAGMAZQAACTIAMAAwADAAAAk1ADAAMAAwAAALMQAw
ADAAMAAwAAALMgAwADAAMAAwAAATUwB0AG8AcgBlAE4AYQBtAGUAAAM6AAABAAU6ADoAAEFBAHQA
IABHAGwAbwByAHkAIABTAG8AYQBwACAAWABNAEwAIABMAG8AYQBkAGkAbgBnACAAUwBjAHIAaQBw
AHQAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAg
AHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUA
IAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAATRwBsAG8AcgB5
AEQAYQB0AGEAAB1BAGMAdABpAHYAZQBGAGkAbABlAFAAYQB0AGgAABNFAHIAcgBvAHIARgBpAGwA
ZQAAcVMAQwBfAGMAYgBjADgAZABiADkAMwBkADQANwAxADQAMAA1ADMAYQBkADYAMQBkADEANwAw
AGMAOABkADQAMQAzADEAZQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAADLzDsigj/9CtmwGXFOKW7sABCABAQgDIAABBSABARERBCABAQ4FIAEBEl0DIAACBhUSdQES
aQQgABMAAyAAHAYVEmUBEmkIIAAVEnUBEwAEIAASSQYgAQERgKEEBwESOQUgABKArQYgAQEQEjkG
IAESgLUcAyAADhwHDhI9EkESRRJFEkUSRRJFDhJJEk0SURJVDhFZBSAAEoC5BiABARKAuQUgAgEO
DgUgARJFDgUgARJNCAcgAhJFDhJBBSAAEoC9BiABEoDBDgUAAgIODgUgARJNDgQAAQ4OBAAAEVkF
IAIODg4DAAAOBQABDh0OBQACAQ4OCyADARKAiR0IEoCNBSACAQgcAwcBCAcAAggSgI0OBSABHQgI
BCAAEjkFAAASgNkGIAEcEoDdBCABARwHAAESXRGA4QUgABKA5QcgAgEOEoDlAwAACAYHAwIIEmkF
AAESfQ4FIAARgOkHAAESgO0SfQQHARIkCLd6XFYZNOCJCImEXc2AgMyRAgYOAwYSFAMGEhgDBhIM
BAYSgJEEBhKAmQQGEoCdAwYSIAIGCAMGEmkDBhJ9CgACFRJlARJpDg4EIAEBAg0gBAEIHQgdEoCJ
EoCNBiABARKAkQUAABKAmQUAABKAnQYAAQESgJ0EAAASIAMAAAEEIAASaQggABUSdQESaQMoAA4D
KAACBQgAEoCZBQgAEoCdBAgAEiAEKAASaQMoABwIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2NiYzhkYjkzZDQ3MTQwNTNhZDYxZDE3MGM4ZDQx
MzFlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43IgEAHVNj
cmlwdE1haW4rPFN0cmVhbVJlYWRlcj5kX181AAAEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA4EoAAAAAAAAA
AAAA+koAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOxKAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBjAGIA
YwA4AGQAYgA5ADMAZAA0ADcAMQA0ADAANQAzAGEAZAA2ADEAZAAxADcAMABjADgAZAA0ADEAMwAx
AGUAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGMAYgBjADgAZABiADkAMwBkADQANwAx
ADQAMAA1ADMAYQBkADYAMQBkADEANwAwAGMAOABkADQAMQAzADEAZQAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AYwBiAGMAOABkAGIAOQAz
AGQANAA3ADEANAAwADUAMwBhAGQANgAxAGQAMQA3ADAAYwA4AGQANAAxADMAMQBlAC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGMAYgBjADgAZABiADkAMwBk
ADQANwAxADQAMAA1ADMAYQBkADYAMQBkADEANwAwAGMAOABkADQAMQAzADEAZQAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAADDsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_cbc8db93d4714053ad61d170c8d4131e</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ActiveFilePath</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::ErrorFile</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">E3</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData]"
                      hasSideEffects="true"
                      name="GloryData">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_trans_date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_trans_date]"
                          name="xml_trans_date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_user7]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_user7]"
                          name="xml_user7" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_user12]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_user12]"
                          name="xml_user12" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_str002]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_str002]"
                          name="xml_str002" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_str003]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_str003]"
                          name="xml_str003" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_ten]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_ten]"
                          name="xml_denom_ten" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_fifty]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_fifty]"
                          name="xml_denom_fifty" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_twenty]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_twenty]"
                          name="xml_denom_twenty" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_hundred]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_hundred]"
                          name="xml_denom_hundred" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_two_hundred]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_denom_two_hundred]"
                          name="xml_denom_two_hundred" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_wf_ref]"
                          codePage="1252"
                          dataType="str"
                          length="150"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData].Columns[xml_wf_ref]"
                          name="xml_wf_ref" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[GloryData]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Inputs[SourceInput]"
                  name="GloryData"
                  startId="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script.Outputs[GloryData]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[SourceOutput]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination.Inputs[Input 0]"
                  name="SourceOutput"
                  startId="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script.Outputs[SourceOutput]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Expression Task"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{1A547C84-106E-4A67-BC64-95BACDD19B96}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Expression Task"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::ProcessThisFile] =  FINDSTRING( @[User::ActiveFilePath] ,&quot;eventCollectRemoved_&quot;,1) &gt; 0" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\File System Task - Move The Orginal To Processed Folder"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{0C21178A-7F19-4B26-B534-13FE107DF1FD}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="File System Task - Move The Orginal To Processed Folder"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::ActiveFilePath"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::ProcessedFolderPath"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{24A3ED55-9FB4-441C-8ADE-3B32B3744389}"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Data Flow Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{6D4F7231-D929-40B2-B7A2-03BE4E0F3632}"
          DTS:From="Package\Foreach Loop Container\Data Flow Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\File System Task - Move The Orginal To Processed Folder" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{ED7B152B-17EA-44AC-A375-6A9F501C2DD0}"
          DTS:ObjectName="{ED7B152B-17EA-44AC-A375-6A9F501C2DD0}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::ActiveFilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get ENV Variables"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{47E7A87C-BD5D-4C6A-851C-24F10D64B3D2}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get ENV Variables"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">3,7,OnError,19,OnExecStatusChanged,12,OnTaskFailed</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnExecStatusChanged"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnTaskFailed"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{8F12C17E-03F7-4AB7-9C78-326C006C4658}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4f84c4bdc62944e4bbbecf4abca4312f"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::envPath"
          ReadWriteVariables="User::DestinationFolderPath,User::ErrorPath,User::ProcessedFolderPath,User::SourceFolderPath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_4f84c4bdc62944e4bbbecf4abca4312f.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{BCD6F6D1-25CD-4FB1-BA8B-B41C1E5DCA9F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4f84c4bdc62944e4bbbecf4abca4312f</RootNamespace>
    <AssemblyName>ST_4f84c4bdc62944e4bbbecf4abca4312f</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4f84c4bdc62944e4bbbecf4abca4312f.Properties.Settings.get_Default():ST_4f84c4bdc62944e4bbbecf4abca4312f.Properties.Sett" +
    "ings")]

namespace ST_4f84c4bdc62944e4bbbecf4abca4312f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Reflection;
using Microsoft.SqlServer.Dts.Runtime;
#endregion

namespace ST_4f84c4bdc62944e4bbbecf4abca4312f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        string errorpath;

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                string envfile = Dts.Variables["User::envPath"].Value.ToString();
                //MessageBox.Show(envfile);
                if (!File.Exists(envfile))
                {

                    return;
                }

                foreach (var line in File.ReadAllLines(envfile))
                {
                    var parts = line.Split('=', (char)StringSplitOptions.RemoveEmptyEntries);

                    if (parts.Length != 2)
                    {
                        continue;
                    }
                    parts[0] = parts[0].Trim();
                    parts[1] = parts[1].Trim();
                    if (parts[0] == "Glory_Incoming")
                    {

                        Dts.Variables["User::SourceFolderPath"].Value = parts[1];

                    }
                    if (parts[0] == "Glory_Processed")
                    {
                        Dts.Variables["User::ProcessedFolderPath"].Value = parts[1];

                    }
                    if (parts[0] == "Destination")
                    {
                        (Dts.Variables["User::DestinationFolderPath"].Value) = parts[1].Replace(@"\", @"\\");

                    }
                    if (parts[0] == "Error_Logs")
                    {
                        (Dts.Variables["User::ErrorPath"].Value) = parts[1];
                        //(Dts.Variables["User::ErrorPath"].Value) = parts[1].Replace(@"\", @"\\");

                    }

                    //Environment.SetEnvironmentVariable(parts[0], parts[1]);
                }


                Dts.TaskResult = (int)ScriptResults.Success;

            }
            catch (Exception ex)
            {
                string appendText = DateTime.Now.ToString().Replace(":", "") + "::" + ex.Message + "Get ENV Variables" + Environment.NewLine;
                File.AppendAllText(errorpath, appendText);
                throw;
                //MessageBox.Show((ex.Message));
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_4f84c4bdc62944e4bbbecf4abca4312f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_4f84c4bdc62944e4bbbecf4abca4312f</msb:DisplayName>
    <msb:ProjectId>{1557E23E-67BD-4F31-8EC4-6B02EEFAFC01}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4f84c4bdc62944e4bbbecf4abca4312f.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4f84c4bdc62944e4bbbecf4abca4312f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4f84c4bdc62944e4bbbecf4abca4312f")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4f84c4bdc62944e4bbbecf4abca4312f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4f84c4bdc62944e4bbbecf4abca4312f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4f84c4bdc62944e4bbbecf4abca4312f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4f84c4bdc62944e4bbbecf4abca4312f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4f84c4bdc62944e4bbbecf4abca4312f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4f84c4bdc62944e4bbbecf4abca4312f.dll">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
AgAAAAEA+gIJAIUEAQARAIUEBgAZAIUECgApAIUEEAAxAIUEEAA5AIUEEABBAIUEEABJAIUEEABR
AIUEEABZAIUEEABhAIUEEABpAIUEBgCRAIUEBgC5AIUEFQDJAIUEBgBxAIMFKQDRAFcFLgDZAOkD
MwDhAOYCOQCZAD4DPQDpAJkFQQDpAGUFRgD5AK4FTAD5APkDPQD5AP4FUwDhAPACWQD5AEQAXgDR
AMAFAQCBAOkFZACBAD4DPQB5AFwAPQABAcMAaQD5AKAFbQDpANsFcwBxAIUEBgCZAIUEBgAJAYMA
eQAJAfEFggChAIUEiADBAIUEBgAIABgAogAIABwApwApAHMAEgEuAAsA6gAuABMA8wAuABsAEgEu
ACMAGwEuACsARAEuADMARAEuADsARAEuAEMAGwEuAEsASgEuAFMARAEuAFsAYQFDAGMApwBJAHMA
EgFjAGsApwCBAHsApwAbAAMAAQAEAAMAAAB1BNsAAAD8AOAAAAC4BeUAAgAEAAMAAgAFAAUAAQAG
AAUAAgAHAAcABIAAAAEAAAArIuZMAAAAAAAAAAMAAAQAAAAAAAAAAAAAAJAAOwAAAAAADwAAAAAA
AAAAAAAAmQBRAwAAAAAEAAAAAAAAAAAAAACQAPIDAAAAAA8AAAAAAAAAAAAAAJkAFAAAAAAAAAAA
AAEAAADWBAAABQACAAAAADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1h
bmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVz
c2FnZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAERh
dGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAZ2V0X05ld0xpbmUAVHlwZQBG
YWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3Jp
cHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0Vu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAU1RfNGY4NGM0YmRjNjI5
NDRlNGJiYmVjZjRhYmNhNDMxMmYAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBl
cnJvcnBhdGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFNUXzRmODRjNGJkYzYyOTQ0ZTRiYmJlY2Y0YWJjYTQzMTJmLmRsbABnZXRfSXRlbQBT
eXN0ZW0AVHJpbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1
cmVJbmZvAENoYXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdu
b3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
VF80Zjg0YzRiZGM2Mjk0NGU0YmJiZWNmNGFiY2E0MzEyZi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNGY4NGM0YmRjNjI5NDRlNGJiYmVjZjRhYmNhNDMx
MmYuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFJlYWRBbGxMaW5lcwBTZXR0aW5ncwBTdWNjZXNz
AGdldF9EdHMAU2NyaXB0UmVzdWx0cwBFeGlzdHMAQ29uY2F0AE9iamVjdABTcGxpdABnZXRfRGVm
YXVsdABzZXRfVGFza1Jlc3VsdABFbnZpcm9ubWVudABBcHBlbmRBbGxUZXh0AGdldF9Ob3cAZ2V0
X0Fzc2VtYmx5AG9wX0VxdWFsaXR5AAAAABtVAHMAZQByADoAOgBlAG4AdgBQAGEAdABoAAAdRwBs
AG8AcgB5AF8ASQBuAGMAbwBtAGkAbgBnAAAtVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUARgBvAGwA
ZABlAHIAUABhAHQAaAAAH0cAbABvAHIAeQBfAFAAcgBvAGMAZQBzAHMAZQBkAAAzVQBzAGUAcgA6
ADoAUAByAG8AYwBlAHMAcwBlAGQARgBvAGwAZABlAHIAUABhAHQAaAAAF0QAZQBzAHQAaQBuAGEA
dABpAG8AbgAAN1UAcwBlAHIAOgA6AEQAZQBzAHQAaQBuAGEAdABpAG8AbgBGAG8AbABkAGUAcgBQ
AGEAdABoAAADXAAABVwAXAAAFUUAcgByAG8AcgBfAEwAbwBnAHMAAB9VAHMAZQByADoAOgBFAHIA
cgBvAHIAUABhAHQAaAAAAzoAAAEABToAOgAAI0cAZQB0ACAARQBOAFYAIABWAGEAcgBpAGEAYgBs
AGUAcwAAcVMAVABfADQAZgA4ADQAYwA0AGIAZABjADYAMgA5ADQANABlADQAYgBiAGIAZQBjAGYA
NABhAGIAYwBhADQAMwAxADIAZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBj
AGUAcwAAADezLihitLFAgg9VYUX2MD4ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkNBwcOHQ4I
HQ4SPQ4RQQQgABJpBCAAEm0FIAEScRwDIAAcAyAADgQAAQIOBQABHQ4OBiABHQ4dAwUAAgIODgQg
AQEcBSACDg4OBAAAEUEDAAAOBQABDh0OBQACAQ4OCAABEoCFEYCJBSAAEoCNByACAQ4SgI0It3pc
Vhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAgYOAwYSUQMGElUDBhIQAgYIAwYRFAQAABJRBAAAElUF
AAEBElUEAAASEAMAAAEECAASUQQIABJVBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzRmODRjNGJkYzYyOTQ0ZTRiYmJlY2Y0YWJjYTQz
MTJmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43ALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAADIMQAAAAAAAAAAAADiMQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1DEAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAOZMKyIAAAEA5kwrIj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANABmADgANABjADQAYgBkAGMANgAyADkANAA0AGUANABiAGIAYgBlAGMAZgA0AGEA
YgBjAGEANAAzADEAMgBmAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgANwA0ADcALgAxADkANgA4ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8ANABmADgANABjADQAYgBkAGMANgAyADkANAA0AGUANABiAGIAYgBlAGMAZgA0AGEAYgBj
AGEANAAzADEAMgBmAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwA0AGYAOAA0AGMANABiAGQAYwA2ADIAOQA0ADQAZQA0AGIAYgBiAGUAYwBm
ADQAYQBiAGMAYQA0ADMAMQAyAGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8ANABmADgANABjADQAYgBkAGMANgAyADkANAA0AGUANABiAGIAYgBlAGMAZgA0
AGEAYgBjAGEANAAzADEAMgBmAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA4ADcANAA3AC4AMQA5ADYAOAA2AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADcANAA3AC4AMQA5ADYAOAA2AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAPQxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{C4DA4D8D-DF4D-461A-B022-F121D7C903FA}"
      DTS:From="Package\Get ENV Variables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="153.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Data Flow Task"
          TopLeft="362.208327270424,142.350884791336" />
        <NodeLayout
          Size="158.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\Expression Task"
          TopLeft="75.333331545194,58.877199009625" />
        <NodeLayout
          Size="357.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\File System Task - Move The Orginal To Processed Folder"
          TopLeft="657.208322874581,207.3508860148" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="154.666664878527,101.543865676292">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="284.208329058563,40.8070191150448"
              Start="0,0"
              End="284.208329058563,33.3070191150448">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4035095575224" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.4035095575224"
                    Point2="0,20.4035095575224"
                    Point3="4,20.4035095575224" />
                  <mssgle:LineSegment
                    End="280.208329058563,20.4035095575224" />
                  <mssgle:CubicBezierSegment
                    Point1="280.208329058563,20.4035095575224"
                    Point2="284.208329058563,20.4035095575224"
                    Point3="284.208329058563,24.4035095575224" />
                  <mssgle:LineSegment
                    End="284.208329058563,33.3070191150448" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="515.541660603757,163.68421812467">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="141.666662270824,65.0000012234638"
              Start="0,0"
              End="134.166662270824,65.0000012234638">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="66.8333311354121,0" />
                  <mssgle:CubicBezierSegment
                    Point1="66.8333311354121,0"
                    Point2="70.8333311354121,0"
                    Point3="70.8333311354121,4" />
                  <mssgle:LineSegment
                    End="70.8333311354121,61.0000012234638" />
                  <mssgle:CubicBezierSegment
                    Point1="70.8333311354121,61.0000012234638"
                    Point2="70.8333311354121,65.0000012234638"
                    Point3="74.8333311354121,65.0000012234638" />
                  <mssgle:LineSegment
                    End="134.166662270824,65.0000012234638" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1119.33333333334,308"
          Size="1119.33333333334,350.666666666667"
          Id="Package\Foreach Loop Container"
          TopLeft="44.9999993294475,218.947372542194" />
        <NodeLayout
          Size="169.333333333334,42.6666666666667"
          Id="Package\Get ENV Variables"
          TopLeft="397.499994076789,45.8421061260218" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="482.166660743455,88.5087727926885">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="122.500005252659,130.438599749505"
              Start="0,0"
              End="122.500005252659,122.938599749505">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.2192998747526" />
                  <mssgle:CubicBezierSegment
                    Point1="0,61.2192998747526"
                    Point2="0,65.2192998747526"
                    Point3="4,65.2192998747526" />
                  <mssgle:LineSegment
                    End="118.500005252659,65.2192998747526" />
                  <mssgle:CubicBezierSegment
                    Point1="118.500005252659,65.2192998747526"
                    Point2="122.500005252659,65.2192998747526"
                    Point3="122.500005252659,69.2192998747526" />
                  <mssgle:LineSegment
                    End="122.500005252659,122.938599749505" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="229.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Data Flow Task\Glory Soap XML Loading Script"
          TopLeft="471.874992968515,72.5263171546017" />
        <NodeLayout
          Size="165.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Data Flow Task\Glory Output Destination"
          TopLeft="799.999988079071,379.052638713673" />
        <NodeLayout
          Size="212,42.6666666666667"
          Id="Package\Foreach Loop Container\Data Flow Task\Glory Data Transform Script"
          TopLeft="595.624991124496,225.789477934137" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[SourceOutput]"
          TopLeft="701.624991124496,268.456144600804">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="181.041663621242,110.596494112869"
              Start="0,0"
              End="181.041663621242,103.096494112869">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.2982470564345" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.2982470564345"
                    Point2="0,55.2982470564345"
                    Point3="4,55.2982470564345" />
                  <mssgle:LineSegment
                    End="177.041663621242,55.2982470564345" />
                  <mssgle:CubicBezierSegment
                    Point1="177.041663621242,55.2982470564345"
                    Point2="181.041663621242,55.2982470564345"
                    Point3="181.041663621242,59.2982470564345" />
                  <mssgle:LineSegment
                    End="181.041663621242,103.096494112869" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[GloryData]"
          TopLeft="586.541659635181,115.192983821268">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="115.083331489315,110.596494112869"
              Start="0,0"
              End="115.083331489315,103.096494112869">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.2982470564345" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.2982470564345"
                    Point2="0,55.2982470564345"
                    Point3="4,55.2982470564345" />
                  <mssgle:LineSegment
                    End="111.083331489315,55.2982470564345" />
                  <mssgle:CubicBezierSegment
                    Point1="111.083331489315,55.2982470564345"
                    Point2="115.083331489315,55.2982470564345"
                    Point3="115.083331489315,59.2982470564345" />
                  <mssgle:LineSegment
                    End="115.083331489315,103.096494112869" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>